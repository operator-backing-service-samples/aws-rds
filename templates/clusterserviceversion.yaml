apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  name: REPLACE_OPERATOR_NAME.vREPLACE_VERSION
  namespace: placeholder
  annotations:
    alm-examples: '[{"apiVersion":"aws.pmacik.dev/v1alpha1","kind":"RDSDatabase","metadata":{"name":"mydb","namespace":"default","labels":{"app":"mydb"}},"spec":{"class":"db.t2.micro","engine":"postgres","dbName":"mydb","name":"mydb","deleteProtection":false,"password":{"key":"DB_PASSWORD","name":"mydb"},"username":"postgres","size":10}}]'
    capabilities: Basic Install
    categories: 'Database'
    containerImage: REPLACE_IMAGE
    createdAt: 'REPLACE_CREATED_AT'
    description: The operator that manages AWS RDS databases.
    repository: https://github.com/operator-backing-service-samples/aws-rds
spec:
  displayName: AWS RDS Database
  description: |
      The operator that manages AWS RDS databases

      This operator requires AWS credentials in order to be able to work with AWS.
      To allow the operator to access AWS create the following secret prior operator instalation

      ```yaml
      apiVersion: v1
      kind: Secret
      metadata:
        name: REPLACE_OPERATOR_NAME
        namespace: openshift-operators
      type: Opaque
      data:
        AWS_ACCESS_KEY_ID: ...
        AWS_SECRET_ACCESS_KEY: ...
        AWS_REGION: dXMtZWFzdC0y #(BASE64:us-east-2)
      ```

      or by running the `oc` tool

      ```sh
      oc create secret generic REPLACE_OPERATOR_NAME --from-literal=AWS_ACCESS_KEY_ID=... --from-literal=AWS_SECRET_ACCESS_KEY=... --from-literal=AWS_REGION=us-east-2 -n openshift-operators
      ```
  version: REPLACE_VERSION
  maintainers:
    - email: pavel.macik@gmail.com
      name: Pavel Macik
  maturity: alpha
  provider:
    name: Community
  links:
    - name: Source Code
      url: https://github.com/operator-backing-service-samples/aws-rds
  labels:
    name: REPLACE_OPERATOR_NAME
  selector:
    matchLabels:
      name: REPLACE_OPERATOR_NAME
  # Install
  installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
  install:
    strategy: deployment
    spec:
      # Role(s)
      clusterPermissions:
        - serviceAccountName: REPLACE_OPERATOR_NAME
          rules:
            - apiGroups:
                - apiextensions.k8s.io
              resources:
                - customresourcedefinitions
              verbs:
                - '*'
            - apiGroups:
                - aws.pmacik.dev
              resources:
                - '*'
              verbs:
                - '*'
            - apiGroups:
                - ''
              resources:
                - secrets
              verbs:
                - get
            - apiGroups:
                - ''
              resources:
                - services
                - configmaps
              verbs:
                - get
                - create
                - update
                - delete
            - apiGroups:
                - ''
              resources:
                - nodes
              verbs:
                - list
                - watch
            - apiGroups:
                - ''
              resources:
                - namespaces
              verbs:
                - get
                - list
                - watch
      # Deployment(s)
      deployments:
        - name: REPLACE_OPERATOR_NAME
          spec:
            replicas: 1
            selector:
              matchLabels:
                name: REPLACE_OPERATOR_NAME
            template:
              metadata:
                labels:
                  name: REPLACE_OPERATOR_NAME
              spec:
                serviceAccountName: REPLACE_OPERATOR_NAME
                containers:
                  - image: REPLACE_IMAGE
                    env:
                      - name: AWS_REGION
                        valueFrom:
                          secretKeyRef:
                            key: AWS_REGION
                            name: REPLACE_OPERATOR_NAME
                      - name: AWS_ACCESS_KEY_ID
                        valueFrom:
                          secretKeyRef:
                            key: AWS_ACCESS_KEY_ID
                            name: REPLACE_OPERATOR_NAME
                      - name: AWS_SECRET_ACCESS_KEY
                        valueFrom:
                          secretKeyRef:
                            key: AWS_SECRET_ACCESS_KEY
                            name: REPLACE_OPERATOR_NAME
                    imagePullPolicy: Always
                    name: REPLACE_OPERATOR_NAME
                restartPolicy: Always
  # CRD(s)
  customresourcedefinitions:
    owned:
      - name: rdsdatabases.aws.pmacik.dev
        group: aws.pmacik.dev
        version: v1alpha1
        kind: RDSDatabase
        displayName: AWS RDS Database
        description: AWS RDS Database description...
        resources:
          - kind: ConfigMap
            version: v1
        specDescriptors:
          - description: Name of the DB user
            displayName: DB Username
            path: username
            x-descriptors:
              - binding:env:attribute
          - description: DB Name
            displayName: DB Name
            path: dbName
            x-descriptors:
              - binding:env:attribute
        statusDescriptors:
          - description: Operator status message
            displayName: Operator status message
            path: message
          - description: Operator state
            displayName: Operator state
            path: state
          - description: Name of the Secret to hold the DB user and password
            displayName: DB Password Credentials
            path: dbCredentials
            x-descriptors:
              - urn:alm:descriptor:io.kubernetes:Secret
              - binding:env:object:secret:DB_PASSWORD
          - description: Name of the Config Map to hold the DB connection information
            displayName: DB Connection config
            path: dbConnectionConfig
            x-descriptors:
              - urn:alm:descriptor:io.kubernetes:ConfigMap
              - binding:env:object:configmap:DB_HOST
              - binding:env:object:configmap:DB_PORT